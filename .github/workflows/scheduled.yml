name: Scheduled Tasks

on:
  schedule:
    # Run every Monday at 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  # Security audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

      - name: Create issue if vulnerabilities found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'ðŸ”’ Security vulnerabilities detected';
            const body = `Security audit found vulnerabilities in dependencies.

            Please run \`cargo audit\` locally and update dependencies.

            This issue was automatically created by the scheduled security audit workflow.`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'dependencies']
            });

  # Check for outdated dependencies
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-outdated
        run: cargo install cargo-outdated

      - name: Check outdated dependencies
        id: outdated
        run: |
          cargo outdated --format json > outdated.json
          cat outdated.json

      - name: Upload outdated report
        uses: actions/upload-artifact@v4
        with:
          name: outdated-dependencies
          path: outdated.json

  # Test coverage report
  coverage-report:
    name: Coverage Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Install libarchive
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libssl-dev libacl1-dev liblzma-dev libzstd-dev liblz4-dev libbz2-dev zlib1g-dev cmake

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Generate coverage report
        run: cargo llvm-cov --all-features --html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/llvm-cov/html/

  # Test all Rust versions
  rust-versions:
    name: Test Rust Versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable, beta, nightly, 1.70.0] # MSRV: 1.70.0

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Install libarchive
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-dev libssl-dev libacl1-dev liblzma-dev libzstd-dev liblz4-dev libbz2-dev zlib1g-dev cmake

      - name: Build
        run: cargo build --verbose
        continue-on-error: ${{ matrix.rust == 'nightly' }}

      - name: Test
        run: cargo test --verbose
        continue-on-error: ${{ matrix.rust == 'nightly' }}
