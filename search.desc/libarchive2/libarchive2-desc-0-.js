searchState.loadedDescShard("libarchive2", 0, "Safe Rust bindings for libarchive\nRestore ACLs (Access Control Lists)\nAccess ACL\nACL entry\nACL permission flags\nACL tag type\nACL entry type\nAuto-detect the format\nAR (Unix archive) format\nError from libarchive with error message\nArchive format types\nArchive matcher for filtering entries based on patterns\nBest compression (level 9)\nBlock device\nBzip2 compression\nBzip2: Set compression level (0-9)\nClear no-change flags when unlinking\nCAB format (read-only)\nBuilder for reading archives with custom Read …\nBuilder for writing archives with custom Write …\nCharacter device\nCompress (LZW) compression\nCompression format types\nCompression level (0-9)\nCPIO format\nDefault/balanced compression (level 6)\nDefault ACL\nDeflate compression (default)\nDirectory\nImmutable reference to an archive entry\nExtension trait for Entry to add ACL/xattr reading\nMutable reference to an archive entry for building/writing\nExtension trait for EntryMut to add ACL/xattr manipulation\nContains the error value\nError type for libarchive operations\nFlags for controlling extraction behavior\nFastest compression (level 1)\nRestore file flags (e.g., immutable, append-only)\nFIFO/named pipe\nFile type of an archive entry\nFilter-specific options for compression\nSpecific format\nFormat-specific options for archive writing\nGroup owner\nGRZIP compression\nGzip compression\nGzip: Set compression level (0-9)\nForce HFS+ compression\nHonor nodump flag (skip files marked with nodump)\nFollow symlinks on command line only (like -H)\nInvalid argument\nI/O error\nISO 9660 CD-ROM format\nISO9660: Allow lowercase filenames\nISO9660: Set publisher\nISO9660: Set volume ID\nLHA format (read-only)\nFollow all symlinks (like -L)\nLRZIP compression\nLZ4 compression\nLZ4: Set compression level (0-9)\nLZIP compression\nLZOP compression\nUse Mac copyfile for resource forks\nRestore Mac OS metadata\nMask\nMTREE format\nNo special extraction flags\nNo compression (level 0)\nNo special behavior\nDon’t read ACLs\nDon’t create parent directories automatically\nDon’t read file flags\nDon’t use HFS+ compression\nDon’t overwrite existing files\nDon’t overwrite newer files\nDon’t read sparse file information\nDon’t traverse mount points\nDon’t read extended attributes\nNamed group\nNamed user\nNo compression\nNull pointer error\nSet owner/group on extracted files\nContains the success value\nOther\nRestore file permissions\nFollow no symlinks (like -P)\nTrait for progress tracking callbacks\nProgress tracker for monitoring archive operations\nRestore access time after reading\nRAR format (read-only)\nRAR 5.x format (read-only)\nRAW format (no formatting)\nArchive reader with RAII resource management\nArchive reader for reading files from disk\nBehavior flags for reading from disk\nFormat specifier for reading archives\nRegular file\nResult type for libarchive operations\nUse safe writes (rename after extraction)\nReject absolute paths\nReject entries with ‘..’ in path\nGuard against symlink attacks\nWrite sparse files with holes\n7-Zip format\n7z: Set compression level (0-9)\nShar shell archive format\nSocket\nStore (no compression)\nSymbolic link\nSymlink handling mode\nRestore modification time\nTAR format\nGNU TAR format with extensions\nTAR: Use GNU extensions for long pathnames\nPAX (POSIX TAR) format\nRestricted PAX format\nPOSIX ustar format\nUnlink file before creating\nUnknown type\nUser owner\nUTF-8 conversion error\nUUEncode compression\nWARC web archive format\nArchive writer with builder pattern and RAII resource …\nArchive writer for extracting entries to disk\nRestore extended attributes\nXAR format\nExtended attribute (xattr)\nLZMA/XZ compression\nXZ: Set compression level (0-9)\nZIP format\nZIP: Set compression level (0-9)\nZIP compression method options\nZIP: Set compression method\nZstd compression\nZstd: Set compression level (0-22, but typically 0-9)\nGet count of ACL entries\nGet the ACL text representation\nACL type (access or default)\nAdd an ACL entry\nAdd an ACL entry from text\nAdd a directory to the archive\nAdd a file to the archive\nAdd a passphrase for decrypting encrypted archives\nAdd an extended attribute\nGet an immutable view of this entry\nGet the access time\nGet the creation time (birth time)\nGet the raw integer value of the flags\nGet the raw integer value\nCheck if current entry can be descended into\nClear all ACLs\nClear all extended attributes\nClose and free the disk writer\nClose the disk reader\nSet the compression format\nGet the status change time\nRequest that current directory be descended into\nGet the device number (for block and character devices)\nGet the device major number\nGet the device minor number\nExclude entries with group matching the specified GID\nExclude entries matching a specific pathname\nExclude entries matching a shell-style pattern\nExclude entries with owner matching the specified UID\nExecute permission\nGet the typical file extension for this format\nGet the typical file extension for this compression format\nExtract the current entry to disk\nExtract the current entry to disk with specific flags\nGet file flags (BSD-style file flags)\nGet file flags as a text string\nGet the file type\nSet a filter/compression-specific option\nFinish writing and close the archive\nFinish writing the current entry\nSet the archive format\nSet a format-specific option\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate permissions from bitmask\nGet the group ID\nGet the group name\nGet the hardlink target\nCheck if entry has ACLs\nCheck if the current entry supports data block operations\nID (for named user/group)\nInclude only entries with group matching the specified GID\nInclude entries matching a specific pathname\nInclude entries matching a shell-style pattern\nInclude only entries newer than the specified time (in …\nInclude only entries older than the specified time (in …\nInclude only entries with owner matching the specified UID\nGet the inode number\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if entry data is encrypted\nCheck if entry is encrypted\nCheck if entry metadata is encrypted\nCheck if an entry matches the configured filters\nGet the file permissions (mode)\nGet the modification time\nName (for named user/group)\nAttribute name\nCreate a new callback reader from any type implementing …\nCreate a new callback writer from any type implementing …\nCreate a new progress tracker with a callback\nCreate a new entry\nCreate a new disk writer\nCreate a new archive matcher\nCreate a new disk reader\nCreate a new archive reader\nCreate a new archive writer builder\nCreate a new compression level (0-9)\nRead the next entry from disk\nRead the next entry header\nGet the number of hard links\nCalled when progress is made reading or writing an entry\nOpen a path for reading\nOpen an archive file for reading\nOpen an archive using a custom callback\nOpen an archive using a custom callback\nOpen an archive from a file descriptor\nOpen an archive for writing to a file descriptor\nOpen a file for writing\nOpen a multi-volume archive from multiple files\nOpen an archive from memory\nOpen an in-memory archive\nOpen an encrypted archive file with a passphrase\nSet a passphrase for encryption (ZIP and 7z formats)\nCheck if an entry’s path is excluded based on the …\nGet the pathname of the entry\nPermissions\nGet the device ID (for the filesystem containing the file)\nGet the major device number (for the filesystem containing …\nGet the minor device number (for the filesystem containing …\nRead permission\nRead data from the current entry\nRead the next data block from the current entry\nRead all data from the current entry into a vector\nReset progress\nSeek within the current entry’s data\nSet the access time\nSet behavior flags\nSet the creation time (birth time)\nSet the status change time\nSet the device number\nSet the device major number\nSet the device minor number\nSet file flags (BSD-style)\nSet the file type\nSet the group ID\nSet the group name\nSet the hardlink target\nSet the inode number\nSet the modification time\nSet the number of hard links\nSet a format-specific option\nSet extraction options\nSet the pathname\nSet the file permissions\nSet the device ID\nSet the major device number\nSet the minor device number\nSet the file size\nUse standard lookup functions for user/group names\nUse standard user/group lookup functions\nSet the symlink target\nSet symlink handling mode\nSet total bytes\nSet the user ID\nSet the user name\nGet the file size in bytes\nSkip the data for the current entry\nEnable support for a specific compression filter\nEnable support for all compression filters\nEnable support for a specific archive format\nEnable support for all archive formats\nGet the symlink target (for symbolic links)\nTag type\nCheck if an entry is time-excluded based on the configured …\nConvert permissions to bitmask\nGet the user ID\nGet the user name\nUpdate progress\nGet the numeric level value\nAttribute value\nReturns the version string of the underlying libarchive …\nReturns detailed version information including linked …\nReturns the version number of the underlying libarchive …\nWrite permission\nWrite data for the current entry\nWrite data for the current entry\nWrite a data block at a specific offset\nWrite an entry header to disk\nWrite an entry header\nGet count of extended attributes\nGet all extended attributes\nError code from libarchive\nSystem errno if available\nError message from libarchive")